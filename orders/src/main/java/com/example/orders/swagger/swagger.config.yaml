openapi: 3.0.1
info:
  title: "Nuestra primera api crud creada por java/Spring"
  description: "Esta api te permite administrar órdenes"
  contact:
    name: "Nahir Chandia"
    email: "nahirchandia@gmail.com"
  version: "1"
servers:
  - url: "http://localhost:3000"
    description: "Generated server url"
paths:
  /api/Charge/{id}:
    put:
      tags:
        - "charge-controller"
      summary: "Este endpoint se encarga de modificar una ORDEN"
      operationId: "updateCharge"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Charge"
      responses:
        '400':
          description: "Error de la respuesta"
        '500':
          description: "Error de parámetros"
        '200':
          description: "Orden actualizada con éxito"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Charge"
    delete:
      tags:
        - "charge-controller"
      summary: "Este endpoint se encarga de borrar una ORDEN"
      operationId: "deleteChange"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '400':
          description: "Error de la respuesta"
        '500':
          description: "Error de parámetros"
        '200':
          description: "Orden borrada con éxito"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Charge"
  /api/Charge:
    get:
      tags:
        - "charge-controller"
      summary: "Este endpoint se encarga de obtener todas las órdenes"
      operationId: "getCharges"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Charge"
    post:
      tags:
        - "charge-controller"
      summary: "Este endpoint se encarga de crear una ORDEN"
      operationId: "newCharge"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Charge"
      responses:
        '400':
          description: "Error de la respuesta"
        '200':
          description: "Orden creada con éxito"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Charge"
        '500':
          description: "Error de parámetros"
components:
  schemas:
    Charge:
      required:
        - "sku"
        - "product"
        - "description"
        - "address"
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        sku:
          type: "string"
        product:
          type: "string"
        description:
          type: "string"
        address:
          type: "string"
